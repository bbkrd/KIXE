/*
 * Copyright 2016 Deutsche Bundesbank
 * Licensed under the EUPL, Version 1.1 or - as soon they will be approved
 * by the European Commission - subsequent versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 *
 * http://ec.europa.eu/idabc/eupl
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and
 * limitations under the Licence.
 */
package de.bundesbank.jdemetra.kix.kixe.options;

import static de.bundesbank.jdemetra.kix.kixe.options.PerOptionsPanelController.PER_DEFAULT_METHOD;
import org.openide.util.NbPreferences;

final class PerOptionsPanel extends javax.swing.JPanel {

    PerOptionsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel defaultModelMainPanel = new javax.swing.JPanel();
        javax.swing.JPanel defaultModelPanel = new javax.swing.JPanel();
        javax.swing.JLabel perDefaultMethodLabel = new javax.swing.JLabel();
        perDefaultMethod = new javax.swing.JComboBox();
        javax.swing.Box.Filler defaultModelFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        javax.swing.JScrollPane descriptionPane = new javax.swing.JScrollPane();
        javax.swing.JTextArea descriptionText = new javax.swing.JTextArea();

        defaultModelMainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), org.openide.util.NbBundle.getMessage(PerOptionsPanel.class, "PerOptionsPanel.defaultModelMainPanel.border.title"), javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP)); // NOI18N
        defaultModelMainPanel.setLayout(new javax.swing.BoxLayout(defaultModelMainPanel, javax.swing.BoxLayout.LINE_AXIS));

        defaultModelPanel.setMaximumSize(new java.awt.Dimension(300, 50));
        defaultModelPanel.setPreferredSize(new java.awt.Dimension(200, 100));
        defaultModelPanel.setLayout(new java.awt.GridLayout(2, 0));

        org.openide.awt.Mnemonics.setLocalizedText(perDefaultMethodLabel, org.openide.util.NbBundle.getMessage(PerOptionsPanel.class, "PerOptionsPanel.perDefaultMethodLabel.text")); // NOI18N
        defaultModelPanel.add(perDefaultMethodLabel);

        perDefaultMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        defaultModelPanel.add(perDefaultMethod);

        defaultModelMainPanel.add(defaultModelPanel);
        defaultModelMainPanel.add(defaultModelFiller);

        descriptionPane.setBorder(null);

        descriptionText.setEditable(false);
        descriptionText.setBackground(new java.awt.Color(240, 240, 240));
        descriptionText.setColumns(20);
        descriptionText.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        descriptionText.setLineWrap(true);
        descriptionText.setRows(4);
        descriptionText.setText(org.openide.util.NbBundle.getMessage(PerOptionsPanel.class, "PerOptionsPanel.descriptionText.text")); // NOI18N
        descriptionText.setWrapStyleWord(true);
        descriptionPane.setViewportView(descriptionText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(defaultModelMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(descriptionPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(defaultModelMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        defaultModelMainPanel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(PerOptionsPanel.class, "PerOptionsPanel.defaultModelMainPanel.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        boolean perDisplayFirstYear = NbPreferences.forModule(PerOptionsPanelController.class).getBoolean(PER_DEFAULT_METHOD, false);
        String perText = perDisplayFirstYear ? "Yes" : "No";
        perDefaultMethod.setSelectedItem(perText);

    }

    void store() {
        NbPreferences.forModule(PerOptionsPanelController.class).putBoolean(PER_DEFAULT_METHOD, perDefaultMethod.getSelectedItem().toString().equals("Yes"));
    }

    boolean valid() {
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox perDefaultMethod;
    // End of variables declaration//GEN-END:variables
}
